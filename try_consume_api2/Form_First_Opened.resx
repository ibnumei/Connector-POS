<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="b_connection.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOIAAABPCAYAAAD2khnnAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANOSURBVHhe7dq9ThtBFIbhXBMVHZU7boCKyh0VHZU7Kip3
        XACVO1d0VO4cJXKkCBElEEWOFGElwsS7Xnt3J3wD45h4bPGzhFO8Bz2KhDLbvZrZWd6MRiMH4HURImAA
        IQIGECJgACECBhAiYMCDQ0zT1I3HY5dlmZtMJgBWUCfqRd3EevrXyhCTJPEPLYrCMQzztCnL0k2n05VR
        Lg1RNesBYYb50HWHXXf889gdfj8EsEJ70Pa99LP+XUE3Qd78aKeM9bYQonZB1Rum97vndj/vurW3awCe
        YOvjlutcde6Kci7Pc9/ZfHcLIYYIsyJzzX4z+mAAj9e4aPiTpUave/Pd3QtRx1GNIlTFsYcBeLpar+YG
        k4HvTPcvCyFqqwzvhOyEwMvZ+bTjO9M7Y7jAmYWoOjV6J4wtBlCd1mXL9xaOqLMQw25YP6tHFwKozvq7
        df8KqNFp1Ieo7VGjs2tsEYDq6VOgRnczPsRwSXPy6yS6AED19L1Ro9dCH6I+Mmp0bo0tAFC9/a/7vrtZ
        iOGiRoXGFgCo3sKOSIjA/0eIgAGECBhAiIABhAgYQIiAAYQIGECIgAGECBhAiIABhAgYQIiAAYQIGECI
        gAGECBhAiIABhAgYQIiAAYQIGECIgAGECBhAiIABhAgYQIiAAYQIGECIgAGECBhAiIABhAgYQIiAAYQI
        GECIgAGECBhAiIABhAgYQIiAAYQIGECIgAGECBhAiIABhAgYQIiAAYQIGLA0xKMfR9EFAKp38O3AdzcL
        cTwe+1+0B+3oAgDVa/abvruFEE+T0+gCANVrXbZ8d1mW3YYo5c2PZvPDZnQRgGr1s75vLk3TvyHmee5/
        qUpjiwBUp3HR8L2VZen7m4WoKsPUz+rRxQCeT6fO6/zat6Zj6b0QJdyeDiYDt/F+I/oQAM/THXZ9ZzqF
        hvbuhShFUfj/dJ6eu+3T7eiDADxerVdznauO70tH0iRJloeoI2qIUaMr1thDATzc3pe92XFUEepLxXx3
        CyGKSp1Op36RRkdVfWPUXwLoJVP/AlhOnWgT0x/J6HQZRsfR+Z0wiIYYqFrVyzDM80YdhYuZmJUhBjqu
        6iIHwOOpn1hX8x4UIoCXRYiAAYQIGECIgAGECLy6kfsDmlTQMmG57+YAAAAASUVORK5CYII=
</value>
  </data>
  <data name="b_connector.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOQAAABPCAYAAAD7jGmgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANeSURBVHhe7dq/TxRBGIdxSktLSv8ES0tKS0tLSktLYmGM
        DYWFhQUFBRYmWpBoYUIoDJUxJCLBRMkZw0VCIBIEuXi3t7c/Rr4Dcx7eHJ5wq2/xvMknJhdnuyczO8tY
        s9l0AGwgSMAQggQMIUjAEIIEDCFIwJChg0ySxLXbbZemqet0OgCGoF7UjfqJdfW7M4NstVr+oUVROIZh
        LjZlWbosy86Mc2CQqloPCHOQ5G5po+Gern1z915tAxjC3Mqe76a+n56UdBTmEe2cse76gtSuqIrDvNn8
        4W48+ezG7rwFcAFXH310C7XDk7Kcy/Pc99bbX1+QIcYkK9zU4lb0wQDOb3K+7k+cGr0O9vZ3KkgdUzWK
        UTXHHgbg4san19xOo+N70z1NX5DaOsM7IzsjUL3rjz/53pRduOjpBqlKNXpnjC0GMHozy7u+u3B07QYZ
        dseJ2Vp0IYDRu3T3nX9F1OiU6oPUdqnRmTa2CEB19ClRozscH2S4zHn+4SC6AEB19L1So9dGH6Q+Ump0
        no0tAFCdWy+++P66QYYLHZUaWwCgOn07JEEC/w9BAoYQJGAIQQKGECRgCEEChhAkYAhBAoYQJGAIQQKG
        ECRgCEEChhAkYAhBAoYQJGAIQQKGECRgCEEChhAkYAhBAoYQJGAIQQKGECRgCEEChhAkYAhBAoYQJGAI
        QQKGECRgCEEChhAkYAhBAoYQJGAIQQKGECRgCEEChhAkYAhBAoYQJGAIQQKGECRgCEEChhAkYMjAIB++
        /hpdAKA6t19u+v66Qbbbbf/D3MpedAGA6kwtbvn++oJc3W5GFwCozszyru8vTdPjIKX0Pzl35cH76CIA
        1ajvp769JEl+BZnnuf9RtcYWARi9yfm6764sS99hN0jVGWZithZdDGB0dBr9nhxvhDqungpSwm3rTqPj
        Lt9fjT4EwGgsbTR8bzqdhgZPBSlFUfj/tL6buGsz69EHATi/8ek1t1A79J3pqNpqtQYHqaNriFKjK9nY
        QwH8vZvPNrrHVMWoLxy9/fUFKSo2yzK/SKMjrL5R6i8K9BKqfwH8mXrRpqY/utGpM4yOqb07YxANMlC9
        qphhmNGMegoXODFnBhnoGKsLHwDnp45iffUaKkgA/wZBAoYQJGAIQQKGECRgRtP9BCNK1ww1fzR+AAAA
        AElFTkSuQmCC
</value>
  </data>
</root>