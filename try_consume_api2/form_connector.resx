<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="b_save.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAR8AAABRCAYAAADrcqLlAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAANQSURBVHhe7dotT2tLFIDh+9MRCEQFEoGoQCAQFQhEBQ5R
        UYFAVFQgEIiKhkLpxz5Zc87uLbcDKZfmLPOs5EmTprPlm5np/ufl5aUB+NvEB0ghPkAK8QFSiA+QQnyA
        FHvH5/X1tXl7e2vm83nz/v4O8EG0IRoRrag15L++jM9sNisPXa1WjTHG7Dvr9bpZLBZfhujT+ETB4gHt
        xEPG43Fzf3/f3N7eAnwwHA5LIyaTyZ9q/J7YEdUasxOf2O1Esdp5fHxsLi8vm6OjI4C9nJ2dNaPR6E9F
        mma5XJa2bLdmJz5teOKz3+9XHwywj16vV05NMXF9s92aD/GJo1ZMhCfKVXsYwHd0Op1mOp2WtsQd8k58
        YkvU3vHY8QCHdHFxUdoSjWkvoTfxiSLFxB1PbTHATwwGg9KY9vi1iU+76+l2u9WFAD9xfHy8uVOOk1aJ
        T3shFOey2iKAQ4hXdWLifrnEp71ofnh4qC4AOIR4HygmrnlKfOIloJg4k9UWABzC9fV1ac0mPu1lc1Sp
        tgDgEHZ2PuID/A3iA6QQHyCF+AApxAdIIT5ACvEBUogPkEJ8gBTiA6QQHyCF+AApxAdIIT5ACvEBUogP
        kEJ8gBTiA6QQHyCF+AApxAdIIT5ACvEBUogPkEJ8gBTiA6QQHyCF+AApxAdIIT5ACvEBUogPkEJ8gBTi
        A6QQHyCF+AApxAdIIT5ACvEBUogPkEJ8gBTiA6QQHyCF+AApxAdI8Wl87u7uqgsADuHm5qa0ZhOft7e3
        8sVwOKwuADiEfr9fWrMTn6enp+oCgEMYDAalNfP5/Hd8Qjunp6fVRQA/NZlMSmdeX1//jc9yuSxfRplq
        iwB+otfrlcas1+vSnE18okTtdLvd6mKA/yNOVG1j4sj1IT6h/ddrOp02Jycn1YcAfNd4PC5tiRNW25sP
        8Qmr1ar86Pn5uTk/P68+CGAfnU6nGY1GpSlx3JrNZp/HJ7ZGbYBi4q+x2kMBvnJ1dbU5akV44l/17dbs
        xCdEnRaLRVkUE8eweAco3k6MS6P4BNgWbYjNSrysHCenduKotb3jaVXj04pSRbGMMea7E+1oL5drvoxP
        K7ZOcRkNsI9oRq0l2/aKD8ChiQ+QQnyAFOIDpBAfIMFL8wvHPXILBmI1cwAAAABJRU5ErkJggg==
</value>
  </data>
</root>